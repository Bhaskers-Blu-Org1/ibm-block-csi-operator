// Code generated by protoc-gen-go. DO NOT EDIT.
// source: protos/iscsiagent.proto

package iscsiagent

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type LoginRequest struct {
	Targets              []string `protobuf:"bytes,1,rep,name=targets,proto3" json:"targets,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *LoginRequest) Reset()         { *m = LoginRequest{} }
func (m *LoginRequest) String() string { return proto.CompactTextString(m) }
func (*LoginRequest) ProtoMessage()    {}
func (*LoginRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_1143cc9e50cb5a50, []int{0}
}

func (m *LoginRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_LoginRequest.Unmarshal(m, b)
}
func (m *LoginRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_LoginRequest.Marshal(b, m, deterministic)
}
func (m *LoginRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_LoginRequest.Merge(m, src)
}
func (m *LoginRequest) XXX_Size() int {
	return xxx_messageInfo_LoginRequest.Size(m)
}
func (m *LoginRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_LoginRequest.DiscardUnknown(m)
}

var xxx_messageInfo_LoginRequest proto.InternalMessageInfo

func (m *LoginRequest) GetTargets() []string {
	if m != nil {
		return m.Targets
	}
	return nil
}

type LoginReply struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *LoginReply) Reset()         { *m = LoginReply{} }
func (m *LoginReply) String() string { return proto.CompactTextString(m) }
func (*LoginReply) ProtoMessage()    {}
func (*LoginReply) Descriptor() ([]byte, []int) {
	return fileDescriptor_1143cc9e50cb5a50, []int{1}
}

func (m *LoginReply) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_LoginReply.Unmarshal(m, b)
}
func (m *LoginReply) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_LoginReply.Marshal(b, m, deterministic)
}
func (m *LoginReply) XXX_Merge(src proto.Message) {
	xxx_messageInfo_LoginReply.Merge(m, src)
}
func (m *LoginReply) XXX_Size() int {
	return xxx_messageInfo_LoginReply.Size(m)
}
func (m *LoginReply) XXX_DiscardUnknown() {
	xxx_messageInfo_LoginReply.DiscardUnknown(m)
}

var xxx_messageInfo_LoginReply proto.InternalMessageInfo

type LogoutRequest struct {
	Targets              []string `protobuf:"bytes,1,rep,name=targets,proto3" json:"targets,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *LogoutRequest) Reset()         { *m = LogoutRequest{} }
func (m *LogoutRequest) String() string { return proto.CompactTextString(m) }
func (*LogoutRequest) ProtoMessage()    {}
func (*LogoutRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_1143cc9e50cb5a50, []int{2}
}

func (m *LogoutRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_LogoutRequest.Unmarshal(m, b)
}
func (m *LogoutRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_LogoutRequest.Marshal(b, m, deterministic)
}
func (m *LogoutRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_LogoutRequest.Merge(m, src)
}
func (m *LogoutRequest) XXX_Size() int {
	return xxx_messageInfo_LogoutRequest.Size(m)
}
func (m *LogoutRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_LogoutRequest.DiscardUnknown(m)
}

var xxx_messageInfo_LogoutRequest proto.InternalMessageInfo

func (m *LogoutRequest) GetTargets() []string {
	if m != nil {
		return m.Targets
	}
	return nil
}

type LogoutReply struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *LogoutReply) Reset()         { *m = LogoutReply{} }
func (m *LogoutReply) String() string { return proto.CompactTextString(m) }
func (*LogoutReply) ProtoMessage()    {}
func (*LogoutReply) Descriptor() ([]byte, []int) {
	return fileDescriptor_1143cc9e50cb5a50, []int{3}
}

func (m *LogoutReply) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_LogoutReply.Unmarshal(m, b)
}
func (m *LogoutReply) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_LogoutReply.Marshal(b, m, deterministic)
}
func (m *LogoutReply) XXX_Merge(src proto.Message) {
	xxx_messageInfo_LogoutReply.Merge(m, src)
}
func (m *LogoutReply) XXX_Size() int {
	return xxx_messageInfo_LogoutReply.Size(m)
}
func (m *LogoutReply) XXX_DiscardUnknown() {
	xxx_messageInfo_LogoutReply.DiscardUnknown(m)
}

var xxx_messageInfo_LogoutReply proto.InternalMessageInfo

func init() {
	proto.RegisterType((*LoginRequest)(nil), "iscsiagent.LoginRequest")
	proto.RegisterType((*LoginReply)(nil), "iscsiagent.LoginReply")
	proto.RegisterType((*LogoutRequest)(nil), "iscsiagent.LogoutRequest")
	proto.RegisterType((*LogoutReply)(nil), "iscsiagent.LogoutReply")
}

func init() { proto.RegisterFile("protos/iscsiagent.proto", fileDescriptor_1143cc9e50cb5a50) }

var fileDescriptor_1143cc9e50cb5a50 = []byte{
	// 172 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe2, 0x12, 0x2f, 0x28, 0xca, 0x2f,
	0xc9, 0x2f, 0xd6, 0xcf, 0x2c, 0x4e, 0x2e, 0xce, 0x4c, 0x4c, 0x4f, 0xcd, 0x2b, 0xd1, 0x03, 0x8b,
	0x08, 0x71, 0x21, 0x44, 0x94, 0x34, 0xb8, 0x78, 0x7c, 0xf2, 0xd3, 0x33, 0xf3, 0x82, 0x52, 0x0b,
	0x4b, 0x53, 0x8b, 0x4b, 0x84, 0x24, 0xb8, 0xd8, 0x4b, 0x12, 0x8b, 0xd2, 0x53, 0x4b, 0x8a, 0x25,
	0x18, 0x15, 0x98, 0x35, 0x38, 0x83, 0x60, 0x5c, 0x25, 0x1e, 0x2e, 0x2e, 0xa8, 0xca, 0x82, 0x9c,
	0x4a, 0x25, 0x4d, 0x2e, 0x5e, 0x9f, 0xfc, 0xf4, 0xfc, 0xd2, 0x12, 0xc2, 0x1a, 0x79, 0xb9, 0xb8,
	0x61, 0x4a, 0x0b, 0x72, 0x2a, 0x8d, 0x3a, 0x19, 0xb9, 0xb8, 0x3c, 0x41, 0x0e, 0x70, 0x04, 0x39,
	0x40, 0xc8, 0x9a, 0x8b, 0x15, 0x6c, 0xac, 0x90, 0x84, 0x1e, 0x92, 0x43, 0x91, 0xdd, 0x24, 0x25,
	0x86, 0x45, 0x06, 0xe4, 0x06, 0x06, 0x21, 0x3b, 0x2e, 0x36, 0x88, 0xd1, 0x42, 0x92, 0x68, 0x6a,
	0x10, 0x2e, 0x93, 0x12, 0xc7, 0x26, 0x05, 0xd6, 0x9f, 0xc4, 0x06, 0x0e, 0x10, 0x63, 0x40, 0x00,
	0x00, 0x00, 0xff, 0xff, 0xf7, 0x3a, 0xda, 0xdf, 0x2b, 0x01, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// IscsiAgentClient is the client API for IscsiAgent service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type IscsiAgentClient interface {
	// Define a host on storage side.
	Login(ctx context.Context, in *LoginRequest, opts ...grpc.CallOption) (*LoginReply, error)
	Logout(ctx context.Context, in *LogoutRequest, opts ...grpc.CallOption) (*LogoutReply, error)
}

type iscsiAgentClient struct {
	cc *grpc.ClientConn
}

func NewIscsiAgentClient(cc *grpc.ClientConn) IscsiAgentClient {
	return &iscsiAgentClient{cc}
}

func (c *iscsiAgentClient) Login(ctx context.Context, in *LoginRequest, opts ...grpc.CallOption) (*LoginReply, error) {
	out := new(LoginReply)
	err := c.cc.Invoke(ctx, "/iscsiagent.IscsiAgent/Login", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *iscsiAgentClient) Logout(ctx context.Context, in *LogoutRequest, opts ...grpc.CallOption) (*LogoutReply, error) {
	out := new(LogoutReply)
	err := c.cc.Invoke(ctx, "/iscsiagent.IscsiAgent/Logout", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// IscsiAgentServer is the server API for IscsiAgent service.
type IscsiAgentServer interface {
	// Define a host on storage side.
	Login(context.Context, *LoginRequest) (*LoginReply, error)
	Logout(context.Context, *LogoutRequest) (*LogoutReply, error)
}

// UnimplementedIscsiAgentServer can be embedded to have forward compatible implementations.
type UnimplementedIscsiAgentServer struct {
}

func (*UnimplementedIscsiAgentServer) Login(ctx context.Context, req *LoginRequest) (*LoginReply, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Login not implemented")
}
func (*UnimplementedIscsiAgentServer) Logout(ctx context.Context, req *LogoutRequest) (*LogoutReply, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Logout not implemented")
}

func RegisterIscsiAgentServer(s *grpc.Server, srv IscsiAgentServer) {
	s.RegisterService(&_IscsiAgent_serviceDesc, srv)
}

func _IscsiAgent_Login_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(LoginRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(IscsiAgentServer).Login(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/iscsiagent.IscsiAgent/Login",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(IscsiAgentServer).Login(ctx, req.(*LoginRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _IscsiAgent_Logout_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(LogoutRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(IscsiAgentServer).Logout(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/iscsiagent.IscsiAgent/Logout",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(IscsiAgentServer).Logout(ctx, req.(*LogoutRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _IscsiAgent_serviceDesc = grpc.ServiceDesc{
	ServiceName: "iscsiagent.IscsiAgent",
	HandlerType: (*IscsiAgentServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Login",
			Handler:    _IscsiAgent_Login_Handler,
		},
		{
			MethodName: "Logout",
			Handler:    _IscsiAgent_Logout_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "protos/iscsiagent.proto",
}
